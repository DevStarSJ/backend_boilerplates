# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Author {
  books: [Book!]
  id: Float!
  name: String!
}

input AuthorInput {
  name: String!
}

type Book {
  author: Author
  authorId: Float!
  genres: [Genre!]!
  id: Float!
  title: String!
}

input BookInput {
  authorId: Float!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Genre {
  books: [Book!]!
  id: ID!
  name: String!
}

input GenreInput {
  name: String!
}

type Item {
  createdAt: DateTime!
  id: ID!
  name: String!
  price: Int!
  updatedAt: DateTime!
  user: User
  userId: ID
}

input ItemInput {
  id: Int
  name: String
  price: Int
  userId: Int
}

type Mutation {
  createAuthor(data: AuthorInput!): Author!
  createBook(data: BookInput!): Book!
  createGenre(data: GenreInput!): Genre!
  createItem(item: ItemInput!): Item!
  removeItem(id: Float!): SuccessType!
  signUp(data: SignInInput!): SignUpType!
  updateItem(item: ItemInput!): Item!
}

type Query {
  author(id: Float!): Author
  authors: [Author!]!
  book(id: Float!): Book
  books: [Book!]!
  genre(id: Float!): Genre
  genres: [Genre!]!
  items(id: Float): [Item!]!
  users: [User!]!
}

input SignInInput {
  password: String!
  username: String!
}

type SignUpType {
  success: Boolean!
  user: UserType!
}

type SuccessType {
  success: Boolean!
}

type User {
  createdAt: DateTime!
  id: ID!
  items: [Item!]
  password: String!
  updatedAt: DateTime!
  username: String!
}

type UserType {
  createdAt: DateTime!
  id: Float!
  items: [Item!]
  updatedAt: DateTime!
  username: String!
}
